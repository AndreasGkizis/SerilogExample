{
  "ConnectionStrings": {
    "$DockerLocalhostDB": "Server=localhost,1433;Database=SerilogExampleDB;User Id=sa;Password=SecretPa$$w0rd;MultipleActiveResultSets=true;TrustServerCertificate=True;",
    "$LoggingDockerLocalhostDB": "Server=localhost,1433;Database=LoggingSerilogExampleDB;User Id=sa;Password=SecretPa$$w0rd;MultipleActiveResultSets=true;TrustServerCertificate=True;",
    "$localhost": "Data Source=localhost;Initial Catalog=SerilogExampleDB;Integrated Security=true;MultipleActiveResultSets=true;TrustServerCertificate=True;",
    "$localhostLogging": "Data Source=localhost;Initial Catalog=LoggingSerilogExampleDB;Integrated Security=true;MultipleActiveResultSets=true;TrustServerCertificate=True;"
  },
  "AllowedHosts": "*",
  "AllPaths": {
    "LogFilePath": "../../Logstest/"
  },
  "Serilog": {

    //"LevelSwitches": {
    //  "$consoleSwitch": "Verbose",
    //  "$fileSwitch": "Verbose"
    //},

    // This applies to all Sinks
    "MinimumLevel": {
      "Default": "Debug",
      "Override": {
        "Microsoft": "Debug",
        "System": "Debug"
      }
    },
    "Using": [
      "Serilog.Sinks.MSSqlServer",
      "Serilog.Sinks.Console",
      "Serilog.Sinks.File",
      "Serilog.Sinks.Debug",
      "Serilog.Expressions"
    ],
    "WriteTo": [
      // All loggers will be below this WriteTo : and have sub-loggers
      // which we can configure as we wish 
      {
        // Console Logger
        "Name": "Console",
        "Args": {
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{SourceContext}] [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      },
      {
        // Debug Console Logger
        "Name": "Debug",
        "Args": {
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{SourceContext}] [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      },

      // Below are File logging Sinks for all levels

      {
        // Fatal File Logger
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l = 'Fatal'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{SourceContext}] [{Level:u3}] {Message:lj}{NewLine}{Exception}",
                  "path": "../../Logs/Fatal_Log_.txt",
                  "rollingInterval": "Day",
                  "fileSizeLimitBytes": 2097152, // max Filesize of 2MB
                  "rollOnFileSizeLimit": true,
                  "retainedFileCountLimit": 30
                }
              }
            ]
          }
        }
      },
      {
        // Error File Logger
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l = 'Error'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{SourceContext}] [{Level:u3}] {Message:lj}{NewLine}{Exception}",
                  "path": "../../Logs/Error_Log_.txt",
                  "rollingInterval": "Day",
                  "fileSizeLimitBytes": 2097152, // max Filesize of 2MB
                  "rollOnFileSizeLimit": true,
                  "retainedFileCountLimit": 30
                }
              }
            ]
          }
        }
      },
      {
        // Warning File Logger
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l = 'Warning'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{SourceContext}] [{Level:u3}] {Message:lj}{NewLine}{Exception}",
                  "path": "../../Logs/Warning_Logs_.txt",
                  "rollingInterval": "Day",
                  "fileSizeLimitBytes": 2097152, // max Filesize of 2MB
                  "rollOnFileSizeLimit": true,
                  "retainedFileCountLimit": 30

                }
              }
            ]
          }
        }
      },
      {
        // Information File Logger
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l = 'Information'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{SourceContext}] [{Level:u3}] {Message:lj}{NewLine}{Exception}",
                  "path": "../../Logs/Information_Logs_.txt",
                  "rollingInterval": "Day",
                  "fileSizeLimitBytes": 2097152, // max Filesize of 2MB
                  "rollOnFileSizeLimit": true,
                  "retainedFileCountLimit": 30

                }
              }
            ]
          }
        }
      },
      {
        // Debug File Logger
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l = 'Debug'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{SourceContext}] [{Level:u3}] {Message:lj}{NewLine}{Exception}",
                  "path": "../../Logs/Debug_Logs_.txt",
                  "rollingInterval": "Day",
                  "fileSizeLimitBytes": 2097152, // max Filesize of 2MB
                  "rollOnFileSizeLimit": true,
                  "retainedFileCountLimit": 30

                }
              }
            ]
          }
        }
      },

      // Below are MSSQL logging Sinks for all levels

      {
        // Fatal MSSQL Logger
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l = 'Fatal'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "MSSqlServer",
                "Args": {
                  "connectionString": "Data Source=localhost;Initial Catalog=LoggingSerilogExampleDB;Integrated Security=true;MultipleActiveResultSets=true;TrustServerCertificate=True;",
                  "sinkOptionsSection": {
                    "tableName": "FatalLogs",
                    "autoCreateSqlTable": true,
                    "autoCreateSqlDatabase": true,
                    "batchPostingLimit": 5,
                    "period": "0.00:00:05"
                  },
                  //"restrictedToMinimumLevel": "Warning",
                  "columnOptionsSection": {
                    "addStandardColumns": [ "LogEvent" ],
                    "removeStandardColumns": [ "Properties" ],
                    "AdditionalColumns": [
                      {
                        "ColumnName": "SourceContext",
                        "DataType": "nvarchar"
                      },
                      {
                        "ColumnName": "Application",
                        "DataType": "nvarchar"
                      },
                      {
                        "ColumnName": "Environment",
                        "DataType": "nvarchar"
                      }
                    ],
                    "timeStamp": {
                      "columnName": "Timestamp",
                      "convertToUtc": true
                    }
                  }
                }
              }
            ]
          }
        }
      },
      {
        // Error MSSQL Logger
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l = 'Error'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "MSSqlServer",
                "Args": {
                  "connectionString": "Data Source=localhost;Initial Catalog=LoggingSerilogExampleDB;Integrated Security=true;MultipleActiveResultSets=true;TrustServerCertificate=True;",
                  "sinkOptionsSection": {
                    "tableName": "ErrorLogs",
                    "autoCreateSqlTable": true,
                    "autoCreateSqlDatabase": true,
                    "batchPostingLimit": 5,
                    "period": "0.00:00:05"
                  },
                  //"restrictedToMinimumLevel": "Warning",
                  "columnOptionsSection": {
                    "addStandardColumns": [ "LogEvent" ],
                    "removeStandardColumns": [ "Properties" ],
                    "AdditionalColumns": [
                      {
                        "ColumnName": "SourceContext",
                        "DataType": "nvarchar"
                      },
                      {
                        "ColumnName": "Application",
                        "DataType": "nvarchar"
                      },
                      {
                        "ColumnName": "Environment",
                        "DataType": "nvarchar"
                      }
                    ],
                    "timeStamp": {
                      "columnName": "Timestamp",
                      "convertToUtc": true
                    }
                  }
                }
              }
            ]
          }
        }
      },
      {
        // Warning MSSQL Logger
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l = 'Warning'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "MSSqlServer",
                "Args": {
                  "connectionString": "Data Source=localhost;Initial Catalog=LoggingSerilogExampleDB;Integrated Security=true;MultipleActiveResultSets=true;TrustServerCertificate=True;",
                  "sinkOptionsSection": {
                    "tableName": "WarningLogs",
                    "autoCreateSqlTable": true,
                    "autoCreateSqlDatabase": true,
                    "batchPostingLimit": 5,
                    "period": "0.00:00:05"
                  },
                  //"restrictedToMinimumLevel": "Warning",
                  "columnOptionsSection": {
                    "addStandardColumns": [ "LogEvent" ],
                    "removeStandardColumns": [ "Properties" ],
                    "AdditionalColumns": [
                      {
                        "ColumnName": "SourceContext",
                        "DataType": "nvarchar"
                      },
                      {
                        "ColumnName": "Application",
                        "DataType": "nvarchar"
                      },
                      {
                        "ColumnName": "Environment",
                        "DataType": "nvarchar"
                      }
                    ],
                    "timeStamp": {
                      "columnName": "Timestamp",
                      "convertToUtc": true
                    }
                  }
                }
              }
            ]
          }
        }
      },
      {
        // Information MSSQL Logger
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l = 'Information'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "MSSqlServer",
                "Args": {
                  "connectionString": "Data Source=localhost;Initial Catalog=LoggingSerilogExampleDB;Integrated Security=true;MultipleActiveResultSets=true;TrustServerCertificate=True;",
                  "sinkOptionsSection": {
                    "tableName": "InformationLogs",
                    "autoCreateSqlTable": true,
                    "autoCreateSqlDatabase": true,
                    "batchPostingLimit": 5,
                    "period": "0.00:00:05"
                  },
                  //"restrictedToMinimumLevel": "Warning",
                  "columnOptionsSection": {
                    "addStandardColumns": [ "LogEvent" ],
                    "removeStandardColumns": [ "Properties" ],
                    "AdditionalColumns": [
                      {
                        "ColumnName": "SourceContext",
                        "DataType": "nvarchar"
                      },
                      {
                        "ColumnName": "Application",
                        "DataType": "nvarchar"
                      },
                      {
                        "ColumnName": "Environment",
                        "DataType": "nvarchar"
                      }
                    ],
                    "timeStamp": {
                      "columnName": "Timestamp",
                      "convertToUtc": true
                    }
                  }
                }
              }
            ]
          }
        }
      } 
    ],
    "Formatter": "Serilog.Formatting.Json.JsonFormatter",
    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithExceptionDetails",
      {
        "Name": "WithPropertyEnricher",
        "Args": {
          "propertyKey": "Application",
          "propertyValue": "SerilogExample"
        }
      }
    ]
  }
}
